version: 2.1

# Define parameters for dynamic platform selection
parameters:
  target_platform:
    type: string
    default: "android"
    description: "Target platform: android, ios, or both"
  app_name:
    type: string
    default: "Flutter App"
    description: "Application name"
  package_name:
    type: string
    default: "com.example.app"
    description: "Package name"

# Define orbs for Flutter and Android
orbs:
  flutter: circleci/flutter@2.0.1
  android: circleci/android@2.3.0

# Define workflows  
workflows:
  build_and_deploy:
    jobs:
      - build_android:
          filters:
            branches:
              only: /^.*$/
          when:
            or:
              - equal: [ android, << pipeline.parameters.target_platform >> ]
              - equal: [ both, << pipeline.parameters.target_platform >> ]
      - build_ios:
          filters:
            branches:
              only: /^.*$/
          when:
            or:
              - equal: [ ios, << pipeline.parameters.target_platform >> ]
              - equal: [ both, << pipeline.parameters.target_platform >> ]

# Android build job
jobs:
  build_android:
    # Use Android executor with Flutter pre-installed
    executor:
      name: android/android-machine
      resource-class: large
      tag: 2024.01.1
    
    steps:
      - checkout
      
      # Install Flutter SDK
      - run:
          name: Install Flutter SDK
          command: |
            echo "Installing Flutter SDK..."
            git clone https://github.com/flutter/flutter.git -b stable ~/flutter
            echo 'export PATH="$PATH:~/flutter/bin"' >> ~/.bashrc
            source ~/.bashrc
            ~/flutter/bin/flutter --version
            ~/flutter/bin/flutter doctor
      
      # Accept Android licenses
      - run:
          name: Accept Android licenses
          command: |
            echo "Accepting Android licenses..."
            yes | ~/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --licenses || true
      
      # Get Flutter dependencies
      - run:
          name: Get Flutter dependencies
          command: |
            echo "Getting Flutter dependencies..."
            ~/flutter/bin/flutter pub get
      
      # Build Android APK
      - run:
          name: Build Android APK
          command: |
            echo "Building Android APK..."
            ~/flutter/bin/flutter build apk --release --verbose
      
      # Store APK as artifact
      - store_artifacts:
          path: build/app/outputs/flutter-apk/app-release.apk
          destination: webtoapp-android.apk
      
      # Store test results if any
      - store_test_results:
          path: test-results

  # iOS build job (optional, requires macOS)
  build_ios:
    macos:
      xcode: 15.0.0
    
    steps:
      - checkout
      
      # Install Flutter SDK on macOS
      - run:
          name: Install Flutter SDK
          command: |
            echo "Installing Flutter SDK on macOS..."
            git clone https://github.com/flutter/flutter.git -b stable ~/flutter
            echo 'export PATH="$PATH:~/flutter/bin"' >> ~/.bash_profile
            source ~/.bash_profile
            ~/flutter/bin/flutter --version
            ~/flutter/bin/flutter doctor
      
      # Get Flutter dependencies
      - run:
          name: Get Flutter dependencies
          command: |
            echo "Getting Flutter dependencies..."
            ~/flutter/bin/flutter pub get
      
      # Build iOS app (simulator)
      - run:
          name: Build iOS app
          command: |
            echo "Building iOS app..."
            ~/flutter/bin/flutter build ios --release --no-codesign --verbose
      
      # Store IPA as artifact (if signed)
      - store_artifacts:
          path: build/ios/iphoneos/Runner.app
          destination: webtoapp-ios.app
