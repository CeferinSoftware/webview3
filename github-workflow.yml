name: Build Flutter App
on:
  workflow_dispatch:
    inputs:
      app_name:
        description: 'App Name'
        required: true
        type: string
      package_name:
        description: 'Package Name (com.example.myapp)'
        required: true
        type: string
      app_url:
        description: 'Website URL'
        required: true
        type: string
      version:
        description: 'App Version'
        required: false
        default: '1.0.0'
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: 📋 Checkout repository
        uses: actions/checkout@v4
        
      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          
      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
          cache: true
          
      - name: 🔍 Flutter doctor
        run: flutter doctor -v
        
      - name: 📁 Verify project structure
        run: |
          echo "📂 Verificando estructura del proyecto..."
          ls -la
          echo "📂 Contenido de lib/:"
          ls -la lib/ || echo "❌ Directorio lib/ no encontrado"
          echo "📂 Contenido de android/:"
          ls -la android/ || echo "❌ Directorio android/ no encontrado"
          echo "📄 pubspec.yaml:"
          cat pubspec.yaml || echo "❌ pubspec.yaml no encontrado"
        
      - name: 📦 Get dependencies
        run: flutter pub get
        
      - name: 🧹 Analyze code
        run: flutter analyze
        continue-on-error: true
        
      - name: 🏗️ Build APK
        run: flutter build apk --release --verbose
        
      - name: 📱 Build AAB (Android App Bundle)
        run: flutter build appbundle --release --verbose
        
      - name: 📤 Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk-${{ github.event.inputs.app_name }}
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30
          
      - name: 📤 Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab-${{ github.event.inputs.app_name }}
          path: build/app/outputs/bundle/release/app-release.aab
          retention-days: 30
          
      - name: 📊 Upload build summary
        uses: actions/upload-artifact@v4
        with:
          name: build-summary-${{ github.event.inputs.app_name }}
          path: |
            build/app/outputs/flutter-apk/
            build/app/outputs/bundle/
          retention-days: 7

      - name: 📦 Crear ZIP del código fuente
        run: |
          zip -r source-code-${{ github.event.inputs.app_name }}.zip . -x "build/*" -x "*.git*" -x "*.dart_tool*" -x "*.pub-cache*" -x "*.idea*" -x "*.gradle*" -x "*.packages*" -x "*.DS_Store*" -x "*.lock" -x "*.apk" -x "*.aab" -x "*.zip"

      - name: 📤 Subir artefacto ZIP del código fuente
        uses: actions/upload-artifact@v4
        with:
          name: source-code-zip-${{ github.event.inputs.app_name }}
          path: source-code-${{ github.event.inputs.app_name }}.zip
          retention-days: 30
          
      - name: 🎉 Build completed
        run: |
          echo "✅ Build completed successfully!"
          echo "📱 App Name: ${{ github.event.inputs.app_name }}"
          echo "📦 Package: ${{ github.event.inputs.package_name }}"
          echo "🌐 URL: ${{ github.event.inputs.app_url }}"
          echo "🔢 Version: ${{ github.event.inputs.version }}"
          
          # Obtener tamaños de archivos
          APK_SIZE=$(stat -c%s "build/app/outputs/flutter-apk/app-release.apk" 2>/dev/null || echo "0")
          AAB_SIZE=$(stat -c%s "build/app/outputs/bundle/release/app-release.aab" 2>/dev/null || echo "0")
          
          echo "📏 APK Size: $(( APK_SIZE / 1024 / 1024 )) MB"
          echo "📏 AAB Size: $(( AAB_SIZE / 1024 / 1024 )) MB" 